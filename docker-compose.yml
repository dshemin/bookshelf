---
services:
  database:
    image: 'postgres:15.3-alpine3.18'
    environment:
      POSTGRES_PASSWORD: '123456'
      POSTGRES_DB: 'bookshelf'
    ports:
      - '5432:5432'
    volumes:
      - 'pg_data:/var/lib/postgresql/data'
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  s3:
    image: 'minio/minio:RELEASE.2023-05-27T05-56-19Z.fips'
    environment:
      MINIO_ROOT_USER: 'root'
      MINIO_ROOT_PASSWORD: 'password'
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
    command: "server /data --console-address ':9001'"
    healthcheck:
      test: ["CMD", "curl", "-If", "http://0.0.0.0:9000/minio/health/live"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 5s

  idm-setup-before:
    build:
      dockerfile: ./development/kanidm/setup.dockerfile
      args:
        VERSION: 1.7.2
    volumes:
      - './development/kanidm/data:/data'
      - './development/kanidm/setup-before.sh:/setup.sh:ro'
    command: "/setup.sh"

  idm:
    image: docker.io/kanidm/server:1.7.2
    ports:
      - '8443:8443'
    volumes:
      - './development/kanidm/data:/data'
    depends_on:
      idm-setup-before:
        condition: service_completed_successfully

  idm-setup-after:
    build:
      dockerfile: ./development/kanidm/setup.dockerfile
      args:
        VERSION: 1.7.2
    volumes:
      - './development/kanidm/data/:/data'
      - './development/kanidm/setup-after.sh:/setup.sh:ro'
    depends_on:
      idm:
        condition: service_healthy
    command: "/setup.sh"

volumes:
  pg_data:
  minio_data:
